---
- name: Set distribution
  set_fact:
    packages_os_distro: "{{ ansible_distribution + '_' + ansible_distribution_major_version }}"

- name: Set distribution version for Amazon linux 1
  set_fact:
    packages_os_distro: "{{ ansible_distribution + '_' + '1' }}"
  when: ansible_distribution == "Amazon" and ansible_distribution_version == "NA"

- name: Set distribution version for Ubuntu
  set_fact:
    packages_os_distro: "{{ ansible_distribution + '_' + ansible_distribution_version }}"
  when: ansible_distribution == "Ubuntu"

- name: Merge package groups
  set_fact:
    packages_os_merged: >
      {{ packages_os_common['all'] | default({}) |
         combine(packages_os_common[packages_os_distro | lower] | default({}), recursive=True) |
         combine(packages_os_group['all'] | default({}), recursive=True) |
         combine(packages_os_group[packages_os_distro | lower] | default({}), recursive=True) |
         combine(packages_os_host, recursive=True) }}

- name: Set list with packages declared as 'present'
  set_fact:
    packages_os_present_pkgs: "{{ packages_os_present_pkgs + [item.key] }}"
  when: item.value == "present"
  loop: "{{ packages_os_merged | dict2items }}"

- name: Set list with packages declared as 'absent'
  set_fact:
    packages_os_absent_pkgs: "{{ packages_os_absent_pkgs + [item.key] }}"
  when: item.value == "absent"
  loop: "{{ packages_os_merged | dict2items }}"

- name: Set final packages list
  set_fact:
    packages_os_pkgs:
      present: "{{ packages_os_present_pkgs }}"
      absent: "{{ packages_os_absent_pkgs }}"
